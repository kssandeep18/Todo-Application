{"remainingRequest":"/home/local/ZOHOCORP/sandeep-pt2927/Documents/todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/local/ZOHOCORP/sandeep-pt2927/Documents/todo-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/local/ZOHOCORP/sandeep-pt2927/Documents/todo-app/src/App.vue","mtime":1555927303306},{"path":"/home/local/ZOHOCORP/sandeep-pt2927/Documents/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/local/ZOHOCORP/sandeep-pt2927/Documents/todo-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/local/ZOHOCORP/sandeep-pt2927/Documents/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/local/ZOHOCORP/sandeep-pt2927/Documents/todo-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport DisplayTodos from \"./components/DisplayTodos\";\nimport AddTodo from \"./components/AddTodo\"\nexport default {\n  name: 'app',\n  components: {\n    \"display-todos\": DisplayTodos,\n    \"add-todo\": AddTodo\n  },\n  data() {\n    return {\n      todos:[\n        {id:1, content:\"To drink water\", isCompleted:false},\n        {id:2, content:\"To complete assignment\", isCompleted:false}\n      ]\n    }\n  },\n  computed: {\n    completedCount(){\n      let completedCount = 0;\n      this.todos.forEach(todo => {\n        if(todo.isCompleted == true)\n          completedCount++;\n      });\n      console.log(\"Computed property completed count\");\n      return completedCount;\n    },\n    pendingCount(){\n      let pendingCount = 0;\n      this.todos.forEach(todo => {\n        if(todo.isCompleted !== true)\n          pendingCount++;\n      });\n      console.log(\"Computed property pending count\");\n      return pendingCount;\n    }\n  },\n  methods: {\n    addTodo: function(newTodo) {\n      let newId;\n      if(this.todos.length===0) {\n        newId=0;\n      }\n      else {\n        newId=(this.todos[this.todos.length-1].id)+1;\n      }\n      let todosAfterInsertion=[...this.todos,{id:newId, content:newTodo, isCompleted:false}];\n      this.todos=todosAfterInsertion;\n      \n    },\n    deleteTodo: function(idToRemove) {\n      let todosAfterDeletion=this.todos.filter(todo=> {\n        if(todo.id!==parseInt(idToRemove)) {\n          return true;\n        }\n        return false;\n      });\n      this.todos=todosAfterDeletion;\n      \n    },\n    toggleTodo: function(id) {\n      let targetId=this.todos.findIndex(todo=>todo.id==id);\n      this.todos[targetId].isCompleted=!this.todos[targetId].isCompleted;\n      \n    }\n  },\n  mounted() {\n    \n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" class=\"container\">\n    <h1 class=\"center\">Todo App</h1><br/>\n    <display-todos :todos=todos @deleteTodo=\"deleteTodo($event)\" @toggleTodo=\"toggleTodo($event)\" :completedCount=\"completedCount\" :pendingCount=\"pendingCount\"></display-todos>\n    <add-todo @addTodo=\"addTodo($event)\"></add-todo>\n  </div>\n</template>\n\n<script>\nimport DisplayTodos from \"./components/DisplayTodos\";\nimport AddTodo from \"./components/AddTodo\"\nexport default {\n  name: 'app',\n  components: {\n    \"display-todos\": DisplayTodos,\n    \"add-todo\": AddTodo\n  },\n  data() {\n    return {\n      todos:[\n        {id:1, content:\"To drink water\", isCompleted:false},\n        {id:2, content:\"To complete assignment\", isCompleted:false}\n      ]\n    }\n  },\n  computed: {\n    completedCount(){\n      let completedCount = 0;\n      this.todos.forEach(todo => {\n        if(todo.isCompleted == true)\n          completedCount++;\n      });\n      console.log(\"Computed property completed count\");\n      return completedCount;\n    },\n    pendingCount(){\n      let pendingCount = 0;\n      this.todos.forEach(todo => {\n        if(todo.isCompleted !== true)\n          pendingCount++;\n      });\n      console.log(\"Computed property pending count\");\n      return pendingCount;\n    }\n  },\n  methods: {\n    addTodo: function(newTodo) {\n      let newId;\n      if(this.todos.length===0) {\n        newId=0;\n      }\n      else {\n        newId=(this.todos[this.todos.length-1].id)+1;\n      }\n      let todosAfterInsertion=[...this.todos,{id:newId, content:newTodo, isCompleted:false}];\n      this.todos=todosAfterInsertion;\n      \n    },\n    deleteTodo: function(idToRemove) {\n      let todosAfterDeletion=this.todos.filter(todo=> {\n        if(todo.id!==parseInt(idToRemove)) {\n          return true;\n        }\n        return false;\n      });\n      this.todos=todosAfterDeletion;\n      \n    },\n    toggleTodo: function(id) {\n      let targetId=this.todos.findIndex(todo=>todo.id==id);\n      this.todos[targetId].isCompleted=!this.todos[targetId].isCompleted;\n      \n    }\n  },\n  mounted() {\n    \n  }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}